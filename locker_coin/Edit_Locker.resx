<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /x9kUeo7Sb0YlQAAAABJRU5ErkJggg==
</value>
  </data>
</root>